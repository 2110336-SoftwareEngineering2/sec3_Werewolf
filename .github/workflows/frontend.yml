# This is a basic workflow to help you get started with Actions

name: Frontend Workflow

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ frontend ]
  pull_request:
    branches: [ frontend ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    working-directory: maid-care-service-frontend

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Node.js environment version ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.4
        with: 
          node-version: ${{ matrix.node_version }}
        
      # Cache node_modules
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Testing
        run: |
          npm install
          npm fund
          npm run build --if-present
          npm run test
  
  deploy-netlify:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) 

    needs: ['build-and-test']
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Setup Node.js environment version ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.4
        with: 
          node-version: ${{ matrix.node_version }}
            
      # Cache node_modules
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Build the site
        run: |
          npm install --production
          npm fund
          npm run build
      
      - name: Install Netlify
        run: sudo npm install netlify-cli -g
        
      - name: Netlify Actions
        # You may pin to the exact commit or the version.
        # uses: nwtgck/actions-netlify@db90f8c196ec8808d9765741da1be62c48db8867
        uses: nwtgck/actions-netlify@v1.1.11
        with:
          # Publish directory
          publish-dir: './maid-care-service-frontend/build/'

          # Custom deploy message for Netlify
          deploy-message: ${{ github.event.head_commit.message }}

          # Production branch
          production-branch: frontend
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

        
  
